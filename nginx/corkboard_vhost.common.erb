charset utf-8;

root <%= path / 'public' %>;

location ~* \.(js|css|jpe?g|png|gif|ico|eot|woff|ttf|swf)$ {
  if ($request_uri ~ "\?[0-9]+$") {
    expires max; # cache timestamped assets forever...
    break;
  }
  if ($request_uri !~ "\?[0-9]+$") {
    expires 1d; # ...and others for 1 day
    break;
  }
}

location ~ ^/assets/ {
  expires max;
  gzip_static on;
  add_header Cache-Control public;
  add_header Last-Modified "";
  add_header ETag "";
  break;
}

# POSTs are intended for the app, not cached pages. We use '=' to let @app set the response code.
error_page 405 = @app;

# Respond with the maintenance page whenever the status is 503.
error_page 503 /system/maintenance.html;

# Serve cached pages if they exist; otherwise, punt the request to the app.
try_files $uri/index.html $uri.html $uri @app;

location @app {
  # If the maintenance page exists, then respond with HTTP 503 (which will
  # serve the maintenace page; see error_page above).
  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  proxy_pass           http://<%= upstream_name %>;
  proxy_redirect       off;

  proxy_buffer_size    64k;
  proxy_buffers        32 16k;
  client_max_body_size 128m;

  proxy_set_header     Host              $host;
  proxy_set_header     X-Real-IP         $remote_addr;
  proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header     X-Forwarded-Proto $scheme;
}

location /assets/upload.nginx {
  client_max_body_size 2048m;

  upload_pass /assets/upload.json;

  upload_store /srv/http/corkboard.cc/current/data/tmp 1;
  upload_store_access user:rw group:rw all:rw;

  upload_set_form_field $upload_field_name[tmp_path] "$upload_tmp_path";
  upload_set_form_field $upload_field_name[filename] "$upload_file_name";
  upload_set_form_field $upload_field_name[content_type] "$upload_content_type";

  upload_aggregate_form_field "$upload_field_name[md5]" "$upload_file_md5";
  upload_aggregate_form_field "$upload_field_name[sha1]" "$upload_file_sha1";
  upload_aggregate_form_field "$upload_field_name[size]" "$upload_file_size";

  upload_pass_args on;
}

location /data/transfers {
  internal;
  root /srv/http/corkboard.cc/current;
}
location /data/assets {
  internal;
  root /srv/http/corkboard.cc/current;
}

location ~* ^/internal_redirect/([^/]+)/(https?\:\/\/[^/]+)/(.*) {
  internal;
  resolver 127.0.0.1; # resolve the proxy_pass target via local dnsmasq

  set $upstream_auth_token $1;
  set $upstream_host $2;
  set $upstream_path $3;
  set $upstream_uri $upstream_host/$upstream_path;

  proxy_set_header Host $upstream_host;
  proxy_set_header X-Auth-Token $upstream_auth_token;
  proxy_set_header Authorization '';
  proxy_set_header Cookie '';

  proxy_max_temp_file_size 0; # proxied response shouldn't touch the disk

  proxy_pass $upstream_uri; # Stream the upstream response to the client
}
